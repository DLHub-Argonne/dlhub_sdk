# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI

on:
  push:
    branches:
      - master
      - dev
  pull_request:
    branches:
      - master
      - dev
  schedule:
    # daily testing to occur at 4:00am CST every morning
    - cron: '00 10 * * *'
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        cfg:
          - python_version: "3.10"
            label: latest libraries

          - python_version: "3.9"
            label: latest libraries

          - python_version: "3.8"
            label: latest libraries

          - python_version: "3.7"
            label: latest libraries

    name: "Python ${{ matrix.cfg.python_version }} - ${{ matrix.cfg.label }}"

    env:
      CLIENT_ID: ${{ secrets.CLIENT_ID }}
      CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.cfg.python_version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.cfg.python_version }}

      - name: Globus auth
        run: 'echo "$GLOBUS_CONFIG" > ~/.globus-native-apps.cfg'
        shell: bash
        env:
          GLOBUS_CONFIG: "${{ secrets.GLOBUS_CONFIG }}"

      - name: Run Installation Script
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install flake8 pytest
          pip install -r test-requirements.txt      

          # Print out the environment for record-keeping
          pip list

      - name: Lint with flake8
        run: |
          # stop the build if there are any-flake8 comments
          flake8 dlhub_sdk
          # Warn us about complexity
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pytest --cov=dlhub_sdk ./dlhub_sdk
      - name: Coveralls
        run: |
          pip install coveralls
          coveralls --service=github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
